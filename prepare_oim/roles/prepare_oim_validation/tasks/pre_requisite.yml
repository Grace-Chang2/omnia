# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Include metadata vars
  ansible.builtin.include_vars: "{{ omnia_metadata_file }}"
  register: include_metadata
  no_log: true

# Include network_spec
- name: Include network_spec.yml
  block:
    - name: Include network_spec file
      ansible.builtin.include_vars: "{{ network_spec }}"
      register: include_network_spec
      no_log: true
      tags: init
  rescue:
    - name: Failed to include network_spec.yml
      ansible.builtin.fail:
        msg: "{{ network_spec_syntax_fail_msg }} Error: {{ include_network_spec.message }}"

- name: Parse network_spec data
  ansible.builtin.set_fact:
    network_data: "{{ network_data | default({}) | combine({item.key: item.value}) }}"
  with_dict: "{{ Networks }}"

- name: Check provision_credentials_config.yml file is encrypted
  ansible.builtin.command: cat {{ provision_credentials_config_filename }}
  changed_when: false
  register: provision_credentials_config_content
  no_log: true
  tags: init

- name: Decrpyt provision_credentials_config.yml
  ansible.builtin.command: >-
    ansible-vault decrypt {{ provision_credentials_config_filename }}
    --vault-password-file {{ provision_credentials_vault_path }}
  changed_when: false
  when: ansible_vault_search_key in provision_credentials_config_content.stdout
  tags: init

- name: Include provision_credentials_config.yml
  block:
    - name: Include provision_config_credentials.yml
      ansible.builtin.include_vars: "{{ provision_credentials_config_filename }}"
      register: include_provision_cred_config
      no_log: true
      tags: init
  rescue:
    - name: Failed to include_provision_config.yml
      ansible.builtin.fail:
        msg: "{{ provision_config_cred_syntax_fail_msg }} Error: {{ include_provision_cred_config.message }}"

- name: Create ansible vault key
  ansible.builtin.set_fact:
    provision_credentials_vault_key: "{{ lookup('password', '/dev/null chars=ascii_letters') }}"
  when: ansible_vault_search_key not in provision_credentials_config_content.stdout
  tags: init

- name: Save vault key to provision_credentials_vault_path
  ansible.builtin.lineinfile:
    path: "{{ provision_credentials_vault_path }}"
    line: "{{ provision_credentials_vault_key }}"
    mode: "{{ conf_file_mode }}"
    owner: root
    create: true
  when: ansible_vault_search_key not in provision_credentials_config_content.stdout
  tags: init

- name: Load software_config.json as software_config
  block:
    - name: Load software_config.json as user_config
      ansible.builtin.include_vars:
        file: "{{ software_config_file }}"
        name: software_config
      register: include_software_config
      no_log: true
  rescue:
    - name: Failed to load software_config.json as user_config
      ansible.builtin.fail:
        msg: "{{ software_config_syntax_fail_msg }} Error: {{ include_software_config.message }}"
